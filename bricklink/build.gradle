version = '0.8.2'

buildscript {
  repositories {
    mavenCentral()
  }
  dependencies {
    classpath("org.springframework.boot:spring-boot-gradle-plugin:1.4.0.RELEASE")
  }
}

apply plugin: 'spring-boot'

dependencies {
  compile 'com.fasterxml.jackson.core:jackson-databind:2.8.1'
  compile 'oauth.signpost:signpost-commonshttp4:1.2.1.2'
  compile 'net.sf.opencsv:opencsv:2.3'
  compile 'org.seleniumhq.selenium:selenium-java:2.53.1'
  compile 'org.seleniumhq.selenium:selenium-firefox-driver:2.53.1'
  compile 'org.seleniumhq.selenium:selenium-chrome-driver:2.53.1'
  compile('com.codeborne:phantomjsdriver:1.2.1') {
    exclude group: 'org.seleniumhq.selenium', module: 'selenium-java'
    exclude group: 'org.seleniumhq.selenium', module: 'selenium-remote-driver'
  }
  compile 'org.springframework.hateoas:spring-hateoas:0.20.0.RELEASE'
  compile 'org.springframework.plugin:spring-plugin-core:1.2.0.RELEASE'
  compile 'org.springframework.boot:spring-boot-starter'
  compile 'org.springframework.boot:spring-boot-starter-web'
  compile 'org.springframework:spring-web'
  testCompile 'junit:junit:4.11'
}

gradle.projectsEvaluated {
  tasks.withType(JavaCompile) {
    options.compilerArgs << "-Xlint:unchecked" << "-Xlint:deprecation"
  }
}

task partout(type: JavaExec) {
  classpath sourceSets.main.runtimeClasspath
  main 'org.kleini.bricklink.PartOut'
  systemProperties = [ configurationFile: 'src/main/resources/bricklink.properties' ]
  if (null != System.getProperty("exec.args")) {
    args System.getProperty("exec.args") .split()
  }
}

task pgTabs(type: JavaExec) {
  classpath sourceSets.main.runtimeClasspath
  main 'org.kleini.bricklink.PriceGuideTabs'
  systemProperties = [ configurationFile: 'src/main/resources/bricklink.properties', numTabs: 10, browser: 'firefox' ]
  if (null != System.getProperty("exec.args")) {
    args System.getProperty("exec.args") .split()
  }
}

task setValues(type: JavaExec) {
  classpath sourceSets.main.runtimeClasspath
  main 'org.kleini.bricklink.DetermineSetValues'
  systemProperties = [ configurationFile: 'src/main/resources/myconfiguration.properties' ]
  if (null != System.getProperty("exec.args")) {
    args System.getProperty("exec.args") .split()
  }
}

task colorsAndCategories(type: JavaExec) {
  classpath sourceSets.main.runtimeClasspath
  main 'org.kleini.bricklink.tools.ColorsAndCategories'
  systemProperties = [ configurationFile: 'src/main/resources/mybricklink.properties' ]
}

task info4LEGOarticles(type: JavaExec) {
  classpath sourceSets.main.runtimeClasspath
  main 'org.kleini.bricklink.Info4LEGOarticles'
  systemProperties = [ configurationFile: 'src/main/resources/myconfiguration.properties' ]
  if (null != System.getProperty("exec.args")) {
    args System.getProperty("exec.args") .split()
  }
}
