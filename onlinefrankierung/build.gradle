apply plugin: 'java'

repositories {
    jcenter()
}

configurations {
    jaxws
    wsimport
}

dependencies {
    jaxws 'com.sun.xml.ws:jaxws-tools:2.1.4'
}

group = 'de.dhl'
version = '2.0'

sourceSets {
    wsimport {
        java.srcDir "src/main/generated"
    }
    main {
        compileClasspath += wsimport.output
        runtimeClasspath += wsimport.output
    }
}

task wsimport2(type:Exec) {
    ext.destDir = file("${projectDir}/src/main/generated")
    doFirst {
        wsimport2.destDir.mkdirs()
        sourceSets.main.output.classesDir.mkdirs()
    }
    commandLine 'wsimport', '-J-Djavax.xml.accessExternalSchema=all', '-s', destDir, '-d', sourceSets.main.output.classesDir, '-keep', '-p', 'de.dhl.onlinefrankierung.webservice', 'https://cig.dhl.de/cig-wsdls/com/dpdhl/wsdl/privatkundenversand-api/2.0/privatkundenversand-api-2.0.wsdl', '-b', 'https://cig.dhl.de/cig-wsdls/com/dpdhl/wsdl/privatkundenversand-api/popws/2.0/popws-2.0.xsd', '-b', 'https://cig.dhl.de/cig-wsdls/com/dpdhl/wsdl/privatkundenversand-api/poppdb/2.0/poppdb-2.0.xsd', '-Xnocompile'
}
wsimport2.outputs.dir wsimport2.destDir

def download(url, File dest) {
    if (!dest.exists()) {
        new URL('https://cig.dhl.de/cig-wsdls/com/dpdhl/wsdl/privatkundenversand-api/2.0/privatkundenversand-api-2.0.wsdl').withInputStream{ i -> dest.withOutputStream{ it << i }}
    }
}

task download {
    ext.wsdlDir = new File(projectDir, "/src/main/wsdl")
    doLast {
        wsdlDir.mkdirs()
        download('https://cig.dhl.de/cig-wsdls/com/dpdhl/wsdl/privatkundenversand-api/2.0/privatkundenversand-api-2.0.wsdl', new File(wsdlDir, "privatkundenversand-api-2.0.wsdl"))
        download('https://cig.dhl.de/cig-wsdls/com/dpdhl/wsdl/privatkundenversand-api/popws/2.0/popws-2.0.xsd', new File(wsdlDir, 'popws-2.0.xsd'))
        download('https://cig.dhl.de/cig-wsdls/com/dpdhl/wsdl/privatkundenversand-api/poppdb/2.0/poppdb-2.0.xsd', new File(wsdlDir, 'poppdb-2.0.xsd'))
    }
}

task wsimportBroken {
    dependsOn download
    ext.destDir = file("${projectDir}/src/main/generated")
    doLast {
        ant {
            sourceSets.main.output.classesDir.mkdirs()
            destDir.mkdirs()
            taskdef(name: 'wsimport', classname: 'com.sun.tools.ws.ant.WsImport', classpath: configurations.jaxws.asPath)
            wsimport(
                keep: true,
                destdir: sourceSets.main.output.classesDir,
                sourcedestdir: destDir,
                package: "de.dhl.onlinefrankierung.webservice",
                xnocompile: "true",
                wsdl: 'https://cig.dhl.de/cig-wsdls/com/dpdhl/wsdl/privatkundenversand-api/2.0/privatkundenversand-api-2.0.wsdl'
            ) {
                binding(file:'https://cig.dhl.de/cig-wsdls/com/dpdhl/wsdl/privatkundenversand-api/popws/2.0/popws-2.0.xsd')
                binding(file:'https://cig.dhl.de/cig-wsdls/com/dpdhl/wsdl/privatkundenversand-api/poppdb/2.0/poppdb-2.0.xsd')
            }
        }
    }
}

sourceSets.main.java.srcDirs.add('src/main/generated')

compileWsimportJava.dependsOn(wsimport2)

compileJava {
    // dependsOn(wsimport2)
    dependsOn(compileWsimportJava)
    source sourceSets.wsimport.java, sourceSets.main.java
}
