configurations {
    jaxws
    wsimport
}

dependencies {
    jaxws 'com.sun.xml.ws:jaxws-tools:2.2.10'
}

group = 'de.dhl'
version = '2.0'

sourceSets {
    wsimport
    main {
        compileClasspath += wsimport.output
        runtimeClasspath += wsimport.output
    }
}

task wsimport(type:Exec) {
    ext.destDir = file("${projectDir}/src/main/generated")
    doFirst {
        sourceSets.wsimport.java.srcDirs[0].mkdirs()
        sourceSets.wsimport.output.classesDir.mkdirs()
    }
    commandLine 'wsimport', '-J-Djavax.xml.accessExternalSchema=all', '-s', sourceSets.wsimport.java.srcDirs[0], '-d', sourceSets.wsimport.output.classesDir, '-keep', '-p', 'de.dhl.onlinefrankierung.webservice', 'https://cig.dhl.de/cig-wsdls/com/dpdhl/wsdl/privatkundenversand-api/2.0/privatkundenversand-api-2.0.wsdl', '-b', 'https://cig.dhl.de/cig-wsdls/com/dpdhl/wsdl/privatkundenversand-api/popws/2.0/popws-2.0.xsd', '-b', 'https://cig.dhl.de/cig-wsdls/com/dpdhl/wsdl/privatkundenversand-api/poppdb/2.0/poppdb-2.0.xsd', '-Xnocompile', '-XadditionalHeaders'
}

def download(url, File dest) {
    if (!dest.exists()) {
        new URL('https://cig.dhl.de/cig-wsdls/com/dpdhl/wsdl/privatkundenversand-api/2.0/privatkundenversand-api-2.0.wsdl').withInputStream{ i -> dest.withOutputStream{ it << i }}
    }
}

task wsimport2 {
    doLast {
        download('https://cig.dhl.de/cig-wsdls/com/dpdhl/wsdl/privatkundenversand-api/2.0/privatkundenversand-api-2.0.wsdl', new File(projectDir, "privatkundenversand-api-2.0.wsdl"))
        download('https://cig.dhl.de/cig-wsdls/com/dpdhl/wsdl/privatkundenversand-api/popws/2.0/popws-2.0.xsd', new File(projectDir, 'popws-2.0.xsd'))
        download('https://cig.dhl.de/cig-wsdls/com/dpdhl/wsdl/privatkundenversand-api/poppdb/2.0/poppdb-2.0.xsd', new File(projectDir, 'poppdb-2.0.xsd'))
        sourceSets.wsimport.output.classesDir.mkdirs()
        sourceSets.wsimport.java.srcDirs[0].mkdirs()
        ant {
            taskdef(name: 'wsimport', classname: 'com.sun.tools.ws.ant.WsImport', classpath: configurations.jaxws.asPath)
            wsimport(
                keep: true,
                destdir: sourceSets.wsimport.output.classesDir,
                sourcedestdir: sourceSets.wsimport.java.srcDirs[0],
                package: "de.dhl.onlinefrankierung.webservice",
                xnocompile: "true",
                wsdl: 'https://cig.dhl.de/cig-wsdls/com/dpdhl/wsdl/privatkundenversand-api/2.0/privatkundenversand-api-2.0.wsdl'
            ) {
                binding(dir:projectDir, includes:'popws-2.0.xsd,poppdb-2.0.xsd')
            }
        }
    }
}

wsimport.outputs.dir sourceSets.wsimport.java.srcDirs[0]

compileWsimportJava.dependsOn(wsimport)
compileJava.dependsOn(compileWsimportJava)

jar.from sourceSets.wsimport.runtimeClasspath
sourcesJar.from sourceSets.wsimport.allJava, sourceSets.main.allJava

clean {
    delete sourceSets.wsimport.java.srcDirs
}
